//
// File generated by rootcint at Fri Jul  4 17:18:44 2008

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "gps_Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CreateTab_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void CreateTab_Dictionary();
   static void delete_CreateTab(void *p);
   static void deleteArray_CreateTab(void *p);
   static void destruct_CreateTab(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CreateTab*)
   {
      ::CreateTab *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CreateTab),0);
      static ::ROOT::TGenericClassInfo 
         instance("CreateTab", "CreateTab.hh", 45,
                  typeid(::CreateTab), DefineBehavior(ptr, ptr),
                  0, &CreateTab_Dictionary, isa_proxy, 0,
                  sizeof(::CreateTab) );
      instance.SetDelete(&delete_CreateTab);
      instance.SetDeleteArray(&deleteArray_CreateTab);
      instance.SetDestructor(&destruct_CreateTab);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CreateTab*)
   {
      return GenerateInitInstanceLocal((::CreateTab*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CreateTab*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CreateTab_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CreateTab*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void gpsPlot_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_gpsPlot(void *p);
   static void deleteArray_gpsPlot(void *p);
   static void destruct_gpsPlot(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::gpsPlot*)
   {
      ::gpsPlot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::gpsPlot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("gpsPlot", ::gpsPlot::Class_Version(), "gpsPlot.hh", 51,
                  typeid(::gpsPlot), DefineBehavior(ptr, ptr),
                  &::gpsPlot::Dictionary, isa_proxy, 0,
                  sizeof(::gpsPlot) );
      instance.SetDelete(&delete_gpsPlot);
      instance.SetDeleteArray(&deleteArray_gpsPlot);
      instance.SetDestructor(&destruct_gpsPlot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::gpsPlot*)
   {
      return GenerateInitInstanceLocal((::gpsPlot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::gpsPlot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Polar_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_Polar(void *p);
   static void deleteArray_Polar(void *p);
   static void destruct_Polar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Polar*)
   {
      ::Polar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Polar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Polar", ::Polar::Class_Version(), "Polar.hh", 65,
                  typeid(::Polar), DefineBehavior(ptr, ptr),
                  &::Polar::Dictionary, isa_proxy, 0,
                  sizeof(::Polar) );
      instance.SetDelete(&delete_Polar);
      instance.SetDeleteArray(&deleteArray_Polar);
      instance.SetDestructor(&destruct_Polar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Polar*)
   {
      return GenerateInitInstanceLocal((::Polar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Polar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *gpsPlot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *gpsPlot::Class_Name()
{
   return "gpsPlot";
}

//______________________________________________________________________________
const char *gpsPlot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::gpsPlot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int gpsPlot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::gpsPlot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void gpsPlot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::gpsPlot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *gpsPlot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::gpsPlot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Polar::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Polar::Class_Name()
{
   return "Polar";
}

//______________________________________________________________________________
const char *Polar::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Polar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Polar::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Polar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Polar::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Polar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Polar::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Polar*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void gpsPlot::Streamer(TBuffer &R__b)
{
   // Stream an object of class gpsPlot.

   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void gpsPlot::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class gpsPlot.
      TClass *R__cl = ::gpsPlot::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fCleanup", &fCleanup);
      R__insp.Inspect(R__cl, R__parent, "*fEmbeddedCanvas", &fEmbeddedCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fStatusBar", &fStatusBar);
      R__insp.Inspect(R__cl, R__parent, "*fToolBar", &fToolBar);
      R__insp.Inspect(R__cl, R__parent, "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__parent, "*fTimer", &fTimer);
      R__insp.Inspect(R__cl, R__parent, "fVerbose", &fVerbose);
      TGMainFrame::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_gpsPlot(void *p) {
      delete ((::gpsPlot*)p);
   }
   static void deleteArray_gpsPlot(void *p) {
      delete [] ((::gpsPlot*)p);
   }
   static void destruct_gpsPlot(void *p) {
      typedef ::gpsPlot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::gpsPlot

namespace ROOT {
   // Wrapper around operator delete
   static void delete_CreateTab(void *p) {
      delete ((::CreateTab*)p);
   }
   static void deleteArray_CreateTab(void *p) {
      delete [] ((::CreateTab*)p);
   }
   static void destruct_CreateTab(void *p) {
      typedef ::CreateTab current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CreateTab

//______________________________________________________________________________
void Polar::Streamer(TBuffer &R__b)
{
   // Stream an object of class Polar.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void Polar::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class Polar.
      TClass *R__cl = ::Polar::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fPolarFrame", &fPolarFrame);
      R__insp.Inspect(R__cl, R__parent, "*fEmbeddedCanvas", &fEmbeddedCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fCircles[4]", &fCircles);
      R__insp.Inspect(R__cl, R__parent, "*fLines[4]", &fLines);
      R__insp.Inspect(R__cl, R__parent, "*fCircleText[4]", &fCircleText);
      R__insp.Inspect(R__cl, R__parent, "*fLineText[8]", &fLineText);
      R__insp.Inspect(R__cl, R__parent, "*fPoints", &fPoints);
      R__insp.Inspect(R__cl, R__parent, "*fPointID[8]", &fPointID);
      R__insp.Inspect(R__cl, R__parent, "*fMTest", &fMTest);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_Polar(void *p) {
      delete ((::Polar*)p);
   }
   static void deleteArray_Polar(void *p) {
      delete [] ((::Polar*)p);
   }
   static void destruct_Polar(void *p) {
      typedef ::Polar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Polar

/********************************************************
* gps_Dict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablegps_Dict();

extern "C" void G__set_cpp_environmentgps_Dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("gpsPlot.hh");
  G__add_compiledheader("CreateTab.hh");
  G__add_compiledheader("Polar.hh");
  G__cpp_reset_tagtablegps_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevgps_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CreateTab */
static int G__gps_Dict_238_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CreateTab*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CreateTab*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((CreateTab*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((CreateTab*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((CreateTab*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((CreateTab*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((CreateTab*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CreateTab* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new CreateTab((TGCompositeFrame*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) CreateTab((TGCompositeFrame*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__gps_DictLN_CreateTab);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->DoTab((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->FillPlots((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_238_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CreateTab*) G__getstructoffset())->Test();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CreateTab G__TCreateTab;
static int G__gps_Dict_238_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (CreateTab*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CreateTab*) (soff+(sizeof(CreateTab)*i)))->~G__TCreateTab();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (CreateTab*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((CreateTab*) (soff))->~G__TCreateTab();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* gpsPlot */
static int G__gps_Dict_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) gpsPlot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gpsPlot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) gpsPlot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      gpsPlot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gpsPlot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gpsPlot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gpsPlot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gpsPlot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gpsPlot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gpsPlot* p = NULL;
   long gvp = G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new gpsPlot(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) gpsPlot(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new gpsPlot(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) gpsPlot(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new gpsPlot((const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) gpsPlot((const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == G__PVOID) || (gvp == 0)) {
       p = new gpsPlot((const TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) gpsPlot((const TGWindow*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__gps_DictLN_gpsPlot);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gpsPlot*) G__getstructoffset())->ProcessedEvent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TObject*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gpsPlot*) G__getstructoffset())->HandleMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gpsPlot*) G__getstructoffset())->HandleToolBar((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gpsPlot*) G__getstructoffset())->SetVerbose((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_239_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gpsPlot*) G__getstructoffset())->TimeoutProc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef gpsPlot G__TgpsPlot;
static int G__gps_Dict_239_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (gpsPlot*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((gpsPlot*) (soff+(sizeof(gpsPlot)*i)))->~G__TgpsPlot();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (gpsPlot*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((gpsPlot*) (soff))->~G__TgpsPlot();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Polar */
static int G__gps_Dict_249_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Polar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Polar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Polar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Polar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Polar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Polar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Polar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Polar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Polar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Polar* p = NULL;
   long gvp = G__getgvp();
   //m: 1
   if ((gvp == G__PVOID) || (gvp == 0)) {
     p = new Polar((TGCompositeFrame*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Polar((TGCompositeFrame*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__gps_DictLN_Polar);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Polar*) G__getstructoffset())->Draw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Polar*) G__getstructoffset())->Resize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((Polar*) G__getstructoffset())->SetPoint((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((Polar*) G__getstructoffset())->SetPoint((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Polar*) G__getstructoffset())->SetPointText((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gps_Dict_249_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Polar*) G__getstructoffset())->SetPointStatus((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__gps_Dict_249_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Polar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Polar(*(Polar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__gps_DictLN_Polar);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Polar G__TPolar;
static int G__gps_Dict_249_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == G__PVOID) {
       delete[] (Polar*) soff;
     } else {
       G__setgvp(G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Polar*) (soff+(sizeof(Polar)*i)))->~G__TPolar();
       }
       G__setgvp(gvp);
     }
   } else {
     if (gvp == G__PVOID) {
       delete (Polar*) soff;
     } else {
       G__setgvp(G__PVOID);
       ((Polar*) (soff))->~G__TPolar();
       G__setgvp(gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gps_Dict_249_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Polar* dest = (Polar*) G__getstructoffset();
   *dest = *(Polar*) libp->para[0].ref;
   const Polar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CreateTab */

/* gpsPlot */

/* Polar */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncgps_Dict {
 public:
  G__Sizep2memfuncgps_Dict(): p(&G__Sizep2memfuncgps_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncgps_Dict::*p)();
};

size_t G__get_sizep2memfuncgps_Dict()
{
  G__Sizep2memfuncgps_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancegps_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gps_DictLN_CreateTab))) {
     CreateTab *G__Lderived;
     G__Lderived=(CreateTab*)0x1000;
     {
       TGTab *G__Lpbase=(TGTab*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),G__get_linked_tagnum(&G__gps_DictLN_TGTab),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),G__get_linked_tagnum(&G__gps_DictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),G__get_linked_tagnum(&G__gps_DictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),G__get_linked_tagnum(&G__gps_DictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),G__get_linked_tagnum(&G__gps_DictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),G__get_linked_tagnum(&G__gps_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),G__get_linked_tagnum(&G__gps_DictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),G__get_linked_tagnum(&G__gps_DictLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot))) {
     gpsPlot *G__Lderived;
     G__Lderived=(gpsPlot*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot),G__get_linked_tagnum(&G__gps_DictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot),G__get_linked_tagnum(&G__gps_DictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot),G__get_linked_tagnum(&G__gps_DictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot),G__get_linked_tagnum(&G__gps_DictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot),G__get_linked_tagnum(&G__gps_DictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot),G__get_linked_tagnum(&G__gps_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot),G__get_linked_tagnum(&G__gps_DictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gps_DictLN_Polar))) {
     Polar *G__Lderived;
     G__Lderived=(Polar*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gps_DictLN_Polar),G__get_linked_tagnum(&G__gps_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablegps_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CreateTab */
static void G__setup_memvarCreateTab(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab));
   { CreateTab *p; p=(CreateTab*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gps_DictLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TEllipse),-1,-1,4,"fDestPassedLED=",0,"/< GUI LED for dest passed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TEllipse),-1,-1,4,"fEnteredCircleLED=",0,"/< GUI LED for entered circle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TEllipse),-1,-1,4,"fWopLED=",0,"/< GUI LED for wop");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TEllipse),-1,-1,4,"fOnlineLED=",0,"/< GUI LED for online");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TEllipse),-1,-1,4,"fOfflineLED=",0,"/< GUI LED for offline");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TEllipse),-1,-1,4,"fTurnLED=",0,"/< GUI LED for turn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fDestPassedText=",0,"/< GUI Text for dest passed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fEnteredCircleText=",0,"/< GUI Text for entered circle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fWopText=",0,"/< GUI Text for wop");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fOnlineText=",0,"/< GUI Text for online");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fOfflineText=",0,"/< GUI Text for offline");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fTurnModeText=",0,"/< GUI Text for turn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_Polar),-1,-1,4,"fPolar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TGraph),-1,-1,4,"fXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TGraph),-1,-1,4,"fHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fXYPointer=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fHeightPointer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TRootEmbeddedCanvas),-1,-1,4,"fStatus_EC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TRootEmbeddedCanvas),-1,-1,4,"fPosPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TRootEmbeddedCanvas),-1,-1,4,"fHeight_EC=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* gpsPlot */
static void G__setup_memvargpsPlot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot));
   { gpsPlot *p; p=(gpsPlot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TList),-1,-1,4,"fCleanup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TRootEmbeddedCanvas),-1,-1,4,"fEmbeddedCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TGStatusBar),-1,-1,4,"fStatusBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TGToolBar),-1,-1,4,"fToolBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_CreateTab),-1,-1,4,"fTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TTimer),-1,-1,4,"fTimer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVerbose=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Polar */
static void G__setup_memvarPolar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gps_DictLN_Polar));
   { Polar *p; p=(Polar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__gps_DictLN_PolarcLcLdA),-1,-2,1,"GOOD=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__gps_DictLN_PolarcLcLdA),-1,-2,1,"OK=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__gps_DictLN_PolarcLcLdA),-1,-2,1,"BAD=2",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TGCompositeFrame),-1,-1,4,"fPolarFrame=",0,"/< Frame to draw our components in");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TRootEmbeddedCanvas),-1,-1,4,"fEmbeddedCanvas=",0,"/< Pointer to canvas on which the Polar is drawn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TEllipse),-1,-1,4,"fCircles[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TLine),-1,-1,4,"fLines[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fCircleText[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fLineText[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TPolyMarker),-1,-1,4,"fPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TText),-1,-1,4,"fPointID[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gps_DictLN_TMarker),-1,-1,4,"fMTest=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvargps_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCreateTab(void) {
   /* CreateTab */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab));
   G__memfunc_setup("GetListOfSignals",1602,G__gps_Dict_238_0_1, 85, G__get_linked_tagnum(&G__gps_DictLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__gps_Dict_238_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__gps_Dict_238_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__gps_Dict_238_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__gps_Dict_238_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CreateTab",875,G__gps_Dict_238_0_26, 105, G__get_linked_tagnum(&G__gps_DictLN_CreateTab), -1, 0, 1, 1, 1, 0, "U 'TGCompositeFrame' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoTab",458,G__gps_Dict_238_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPlots",921,G__gps_Dict_238_0_28, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - X d - 'Double_t' 0 - Y "
"d - 'Double_t' 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Test",416,G__gps_Dict_238_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTab1",593,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTab2",594,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTab3",595,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateGraphicsFrame",1904,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TGCompositeFrame' - 0 - putHere", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateLEDs",924,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CreateTab", 1001, G__gps_Dict_238_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgpsPlot(void) {
   /* gpsPlot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot));
   G__memfunc_setup("Class",502,G__gps_Dict_239_0_1, 85, G__get_linked_tagnum(&G__gps_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&gpsPlot::Class), 0);
   G__memfunc_setup("Class_Name",982,G__gps_Dict_239_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&gpsPlot::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__gps_Dict_239_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&gpsPlot::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__gps_Dict_239_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&gpsPlot::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gps_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gps_Dict_239_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gps_Dict_239_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&gpsPlot::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gps_Dict_239_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&gpsPlot::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__gps_Dict_239_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&gpsPlot::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gps_Dict_239_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&gpsPlot::DeclFileLine), 0);
   G__memfunc_setup("gpsPlot",745,G__gps_Dict_239_0_13, 105, G__get_linked_tagnum(&G__gps_DictLN_gpsPlot), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 '1200' w "
"h - 'UInt_t' 0 '400' h i - 'Int_t' 0 '0' v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessedEvent",1450,G__gps_Dict_239_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - event i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y U 'TObject' - 0 - selected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleMenu",993,G__gps_Dict_239_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleToolBar",1279,G__gps_Dict_239_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerbose",1026,G__gps_Dict_239_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimeoutProc",1147,G__gps_Dict_239_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEmbeddedCanvas",1647,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateStatusBar",1517,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMenuBar",1278,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateToolBar",1287,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~gpsPlot", 871, G__gps_Dict_239_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPolar(void) {
   /* Polar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gps_DictLN_Polar));
   G__memfunc_setup("Class",502,G__gps_Dict_249_0_1, 85, G__get_linked_tagnum(&G__gps_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&Polar::Class), 0);
   G__memfunc_setup("Class_Name",982,G__gps_Dict_249_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Polar::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__gps_Dict_249_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&Polar::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__gps_Dict_249_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&Polar::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gps_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gps_Dict_249_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gps_Dict_249_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Polar::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gps_Dict_249_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&Polar::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__gps_Dict_249_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Polar::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gps_Dict_249_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&Polar::DeclFileLine), 0);
   G__memfunc_setup("Polar",510,G__gps_Dict_249_0_13, 105, G__get_linked_tagnum(&G__gps_DictLN_Polar), -1, 0, 1, 1, 1, 0, "U 'TGCompositeFrame' - 0 - metFrame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__gps_Dict_249_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Resize",626,G__gps_Dict_249_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPoint",822,G__gps_Dict_249_0_16, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - Theta "
"d - 'Double_t' 0 - Phi i - 'Int_t' 0 'GOOD' status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPointText",1243,G__gps_Dict_249_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i C - 'Char_t' 10 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPointStatus",1466,G__gps_Dict_249_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - point i - 'Int_t' 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateTextFrame",1508,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateGraphicsFrame",1904,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreatePolarLabels",1701,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakePlot",797,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawPlot",813,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Polar", 510, G__gps_Dict_249_0_24, (int) ('i'), G__get_linked_tagnum(&G__gps_DictLN_Polar), -1, 0, 1, 1, 1, 0, "u 'Polar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Polar", 636, G__gps_Dict_249_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gps_Dict_249_0_26, (int) ('u'), G__get_linked_tagnum(&G__gps_DictLN_Polar), -1, 1, 1, 1, 1, 0, "u 'Polar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncgps_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalgps_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcgps_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__gps_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGToolBar = { "TGToolBar" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_CreateTab = { "CreateTab" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_gpsPlot = { "gpsPlot" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGWidget = { "TGWidget" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TEllipse = { "TEllipse" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_Polar = { "Polar" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TPolyMarker = { "TPolyMarker" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_TMarker = { "TMarker" , 99 , -1 };
G__linked_taginfo G__gps_DictLN_PolarcLcLdA = { "Polar::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablegps_Dict() {
  G__gps_DictLN_TClass.tagnum = -1 ;
  G__gps_DictLN_TBuffer.tagnum = -1 ;
  G__gps_DictLN_TMemberInspector.tagnum = -1 ;
  G__gps_DictLN_TObject.tagnum = -1 ;
  G__gps_DictLN_TList.tagnum = -1 ;
  G__gps_DictLN_TTimer.tagnum = -1 ;
  G__gps_DictLN_TGObject.tagnum = -1 ;
  G__gps_DictLN_TGWindow.tagnum = -1 ;
  G__gps_DictLN_TQObject.tagnum = -1 ;
  G__gps_DictLN_TQObjSender.tagnum = -1 ;
  G__gps_DictLN_TGFrame.tagnum = -1 ;
  G__gps_DictLN_TGCompositeFrame.tagnum = -1 ;
  G__gps_DictLN_TGMainFrame.tagnum = -1 ;
  G__gps_DictLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__gps_DictLN_TGStatusBar.tagnum = -1 ;
  G__gps_DictLN_TGToolBar.tagnum = -1 ;
  G__gps_DictLN_TGTab.tagnum = -1 ;
  G__gps_DictLN_CreateTab.tagnum = -1 ;
  G__gps_DictLN_gpsPlot.tagnum = -1 ;
  G__gps_DictLN_TGWidget.tagnum = -1 ;
  G__gps_DictLN_TEllipse.tagnum = -1 ;
  G__gps_DictLN_TText.tagnum = -1 ;
  G__gps_DictLN_TGraph.tagnum = -1 ;
  G__gps_DictLN_Polar.tagnum = -1 ;
  G__gps_DictLN_TLine.tagnum = -1 ;
  G__gps_DictLN_TPolyMarker.tagnum = -1 ;
  G__gps_DictLN_TMarker.tagnum = -1 ;
  G__gps_DictLN_PolarcLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablegps_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TList);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TTimer);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TQObjSender);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGStatusBar);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGToolBar);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGTab);
   G__tagtable_setup(G__get_linked_tagnum(&G__gps_DictLN_CreateTab),sizeof(CreateTab),-1,62464,(char*)NULL,G__setup_memvarCreateTab,G__setup_memfuncCreateTab);
   G__tagtable_setup(G__get_linked_tagnum(&G__gps_DictLN_gpsPlot),sizeof(gpsPlot),-1,62464,(char*)NULL,G__setup_memvargpsPlot,G__setup_memfuncgpsPlot);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGWidget);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TEllipse);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TText);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum(&G__gps_DictLN_Polar),sizeof(Polar),-1,62464,(char*)NULL,G__setup_memvarPolar,G__setup_memfuncPolar);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TLine);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TPolyMarker);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_TMarker);
   G__get_linked_tagnum_fwd(&G__gps_DictLN_PolarcLcLdA);
}
extern "C" void G__cpp_setupgps_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupgps_Dict()");
  G__set_cpp_environmentgps_Dict();
  G__cpp_setup_tagtablegps_Dict();

  G__cpp_setup_inheritancegps_Dict();

  G__cpp_setup_typetablegps_Dict();

  G__cpp_setup_memvargps_Dict();

  G__cpp_setup_memfuncgps_Dict();
  G__cpp_setup_globalgps_Dict();
  G__cpp_setup_funcgps_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncgps_Dict();
  return;
}
class G__cpp_setup_initgps_Dict {
  public:
    G__cpp_setup_initgps_Dict() { G__add_setup_func("gps_Dict",(G__incsetup)(&G__cpp_setupgps_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initgps_Dict() { G__remove_setup_func("gps_Dict"); }
};
G__cpp_setup_initgps_Dict G__cpp_setup_initializergps_Dict;

