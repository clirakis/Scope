//
// File generated by rootcint at Tue Feb 14 11:09:47 2006.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "RootShowerDict.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TStreamerInfo.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TCollectionProxy.h"
#include "TIsAProxy.h"
namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void MyParticle_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MyParticle(void *p = 0);
   static void *newArray_MyParticle(Long_t size);
   static void delete_MyParticle(void *p);
   static void deleteArray_MyParticle(void *p);
   static void destruct_MyParticle(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::MyParticle*)
   {
      ::MyParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyParticle", ::MyParticle::Class_Version(), "MyParticle.h", 29,
                  typeid(::MyParticle), DefineBehavior(ptr, ptr),
                  &::MyParticle::Dictionary, isa_proxy, 4,
                  sizeof(::MyParticle) );
      instance.SetNew(&new_MyParticle);
      instance.SetNewArray(&newArray_MyParticle);
      instance.SetDelete(&delete_MyParticle);
      instance.SetDeleteArray(&deleteArray_MyParticle);
      instance.SetDestructor(&destruct_MyParticle);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::MyParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void MyDetector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MyDetector(void *p = 0);
   static void *newArray_MyDetector(Long_t size);
   static void delete_MyDetector(void *p);
   static void deleteArray_MyDetector(void *p);
   static void destruct_MyDetector(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::MyDetector*)
   {
      ::MyDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyDetector", ::MyDetector::Class_Version(), "MyDetector.h", 30,
                  typeid(::MyDetector), DefineBehavior(ptr, ptr),
                  &::MyDetector::Dictionary, isa_proxy, 4,
                  sizeof(::MyDetector) );
      instance.SetNew(&new_MyDetector);
      instance.SetNewArray(&newArray_MyDetector);
      instance.SetDelete(&delete_MyDetector);
      instance.SetDeleteArray(&deleteArray_MyDetector);
      instance.SetDestructor(&destruct_MyDetector);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::MyDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void EventHeader_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_EventHeader(void *p = 0);
   static void *newArray_EventHeader(Long_t size);
   static void delete_EventHeader(void *p);
   static void deleteArray_EventHeader(void *p);
   static void destruct_EventHeader(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::EventHeader*)
   {
      ::EventHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventHeader", ::EventHeader::Class_Version(), "MyEvent.h", 36,
                  typeid(::EventHeader), DefineBehavior(ptr, ptr),
                  &::EventHeader::Dictionary, isa_proxy, 4,
                  sizeof(::EventHeader) );
      instance.SetNew(&new_EventHeader);
      instance.SetNewArray(&newArray_EventHeader);
      instance.SetDelete(&delete_EventHeader);
      instance.SetDeleteArray(&deleteArray_EventHeader);
      instance.SetDestructor(&destruct_EventHeader);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::EventHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

namespace ROOT {
   void MyEvent_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MyEvent(void *p = 0);
   static void *newArray_MyEvent(Long_t size);
   static void delete_MyEvent(void *p);
   static void deleteArray_MyEvent(void *p);
   static void destruct_MyEvent(void *p);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const ::MyEvent*)
   {
      ::MyEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyEvent", ::MyEvent::Class_Version(), "MyEvent.h", 60,
                  typeid(::MyEvent), DefineBehavior(ptr, ptr),
                  &::MyEvent::Dictionary, isa_proxy, 4,
                  sizeof(::MyEvent) );
      instance.SetNew(&new_MyEvent);
      instance.SetNewArray(&newArray_MyEvent);
      instance.SetDelete(&delete_MyEvent);
      instance.SetDeleteArray(&deleteArray_MyEvent);
      instance.SetDestructor(&destruct_MyEvent);
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const ::MyEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *MyParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MyParticle::Class_Name()
{
   return "MyParticle";
}

//______________________________________________________________________________
const char *MyParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::MyParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::MyParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::MyParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::MyParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MyDetector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MyDetector::Class_Name()
{
   return "MyDetector";
}

//______________________________________________________________________________
const char *MyDetector::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::MyDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyDetector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::MyDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyDetector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::MyDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyDetector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::MyDetector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *EventHeader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EventHeader::Class_Name()
{
   return "EventHeader";
}

//______________________________________________________________________________
const char *EventHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::EventHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::EventHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::EventHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventHeader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::EventHeader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MyEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MyEvent::Class_Name()
{
   return "MyEvent";
}

//______________________________________________________________________________
const char *MyEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstance((const ::MyEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstance((const ::MyEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstance((const ::MyEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstance((const ::MyEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MyParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyParticle.

   if (R__b.IsReading()) {
      MyParticle::Class()->ReadBuffer(R__b, this);
   } else {
      MyParticle::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void MyParticle::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MyParticle.

      TClass *R__cl = ::MyParticle::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fId", &fId);
      R__insp.Inspect(R__cl, R__parent, "fStatus", &fStatus);
      R__insp.Inspect(R__cl, R__parent, "fDecayType", &fDecayType);
      R__insp.Inspect(R__cl, R__parent, "fNChildren", &fNChildren);
      R__insp.Inspect(R__cl, R__parent, "*fLocation", &fLocation);
      R__insp.Inspect(R__cl, R__parent, "fPassed", &fPassed);
      R__insp.Inspect(R__cl, R__parent, "fEloss", &fEloss);
      R__insp.Inspect(R__cl, R__parent, "fDecayLength", &fDecayLength);
      R__insp.Inspect(R__cl, R__parent, "fTimeOfDecay", &fTimeOfDecay);
      R__insp.Inspect(R__cl, R__parent, "fChild[6]", fChild);
      R__insp.Inspect(R__cl, R__parent, "fNtrack", &fNtrack);
      R__insp.Inspect(R__cl, R__parent, "*fTracks", &fTracks);
      TParticle::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MyParticle(void *p) {
      return  p ? new(p) ::MyParticle : new ::MyParticle;
   }
   static void *newArray_MyParticle(Long_t size) {
      return new ::MyParticle[size];
   }
   // Wrapper around operator delete
   static void delete_MyParticle(void *p) {
      delete ((::MyParticle*)p);
   }
   static void deleteArray_MyParticle(void *p) {
      delete [] ((::MyParticle*)p);
   }
   static void destruct_MyParticle(void *p) {
      typedef ::MyParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MyParticle

//______________________________________________________________________________
void MyDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyDetector.

   if (R__b.IsReading()) {
      MyDetector::Class()->ReadBuffer(R__b, this);
   } else {
      MyDetector::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void MyDetector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MyDetector.

      TClass *R__cl = ::MyDetector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fMinX", &fMinX);
      R__insp.Inspect(R__cl, R__parent, "fMinY", &fMinY);
      R__insp.Inspect(R__cl, R__parent, "fMinZ", &fMinZ);
      R__insp.Inspect(R__cl, R__parent, "fMaxX", &fMaxX);
      R__insp.Inspect(R__cl, R__parent, "fMaxY", &fMaxY);
      R__insp.Inspect(R__cl, R__parent, "fMaxZ", &fMaxZ);
      R__insp.Inspect(R__cl, R__parent, "fDimX", &fDimX);
      R__insp.Inspect(R__cl, R__parent, "fDimY", &fDimY);
      R__insp.Inspect(R__cl, R__parent, "fDimZ", &fDimZ);
      R__insp.Inspect(R__cl, R__parent, "fI[6]", fI);
      R__insp.Inspect(R__cl, R__parent, "fPreconst[6]", fPreconst);
      R__insp.Inspect(R__cl, R__parent, "fEc[6]", fEc);
      R__insp.Inspect(R__cl, R__parent, "fX0[6]", fX0);
      R__insp.Inspect(R__cl, R__parent, "fdT[6]", fdT);
      R__insp.Inspect(R__cl, R__parent, "fTheta0[6]", fTheta0);
      R__insp.Inspect(R__cl, R__parent, "fTotalELoss", &fTotalELoss);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MyDetector(void *p) {
      return  p ? new(p) ::MyDetector : new ::MyDetector;
   }
   static void *newArray_MyDetector(Long_t size) {
      return new ::MyDetector[size];
   }
   // Wrapper around operator delete
   static void delete_MyDetector(void *p) {
      delete ((::MyDetector*)p);
   }
   static void deleteArray_MyDetector(void *p) {
      delete [] ((::MyDetector*)p);
   }
   static void destruct_MyDetector(void *p) {
      typedef ::MyDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MyDetector

//______________________________________________________________________________
void EventHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventHeader.

   if (R__b.IsReading()) {
      EventHeader::Class()->ReadBuffer(R__b, this);
   } else {
      EventHeader::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void EventHeader::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class EventHeader.

      TClass *R__cl = ::EventHeader::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fEvtNum", &fEvtNum);
      R__insp.Inspect(R__cl, R__parent, "fRun", &fRun);
      R__insp.Inspect(R__cl, R__parent, "fDate", &fDate);
      fDate.ShowMembers(R__insp, strcat(R__parent,"fDate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fPrimary", &fPrimary);
      R__insp.Inspect(R__cl, R__parent, "fEnergy", &fEnergy);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EventHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventHeader : new ::EventHeader;
   }
   static void *newArray_EventHeader(Long_t size) {
      return new ::EventHeader[size];
   }
   // Wrapper around operator delete
   static void delete_EventHeader(void *p) {
      delete ((::EventHeader*)p);
   }
   static void deleteArray_EventHeader(void *p) {
      delete [] ((::EventHeader*)p);
   }
   static void destruct_EventHeader(void *p) {
      typedef ::EventHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventHeader

//______________________________________________________________________________
void MyEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyEvent.

   if (R__b.IsReading()) {
      MyEvent::Class()->ReadBuffer(R__b, this);
   } else {
      MyEvent::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void MyEvent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MyEvent.

      TClass *R__cl = ::MyEvent::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fId", &fId);
      R__insp.Inspect(R__cl, R__parent, "fTotalParticles", &fTotalParticles);
      R__insp.Inspect(R__cl, R__parent, "fLast", &fLast);
      R__insp.Inspect(R__cl, R__parent, "fAliveParticles", &fAliveParticles);
      R__insp.Inspect(R__cl, R__parent, "fNparticles", &fNparticles);
      R__insp.Inspect(R__cl, R__parent, "fNseg", &fNseg);
      R__insp.Inspect(R__cl, R__parent, "fMatter", &fMatter);
      R__insp.Inspect(R__cl, R__parent, "fEvtHdr", &fEvtHdr);
      fEvtHdr.ShowMembers(R__insp, strcat(R__parent,"fEvtHdr.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fB", &fB);
      R__insp.Inspect(R__cl, R__parent, "fEThreshold[16]", fEThreshold);
      R__insp.Inspect(R__cl, R__parent, "*fParticles", &fParticles);
      R__insp.Inspect(R__cl, R__parent, "fLastParticle", &fLastParticle);
      fLastParticle.ShowMembers(R__insp, strcat(R__parent,"fLastParticle.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fDetector", &fDetector);
      fDetector.ShowMembers(R__insp, strcat(R__parent,"fDetector.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MyEvent(void *p) {
      return  p ? new(p) ::MyEvent : new ::MyEvent;
   }
   static void *newArray_MyEvent(Long_t size) {
      return new ::MyEvent[size];
   }
   // Wrapper around operator delete
   static void delete_MyEvent(void *p) {
      delete ((::MyEvent*)p);
   }
   static void deleteArray_MyEvent(void *p) {
      delete [] ((::MyEvent*)p);
   }
   static void destruct_MyEvent(void *p) {
      typedef ::MyEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MyEvent

/********************************************************
* RootShowerDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableRootShowerDict();

extern "C" void G__set_cpp_environmentRootShowerDict() {
  G__add_macro("G__CINTVERSION=50160005");
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MyParticle.h");
  G__add_compiledheader("MyDetector.h");
  G__add_compiledheader("MyEvent.h");
  G__cpp_reset_tagtableRootShowerDict();
}
class G__RootShowerDictdOcxx_tag {};

void* operator new(size_t size,G__RootShowerDictdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__RootShowerDictdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_RootShowerDictdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevRootShowerDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MyParticle */
static int G__RootShowerDict_358_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MyParticle *p=NULL;
   if(G__getaryconstruct()) {
     if(G__PVOID==G__getgvp()) {
       p=new MyParticle[G__getaryconstruct()];
     } else {
       p=new MyParticle[G__getaryconstruct()];
     }
   }
   else p=new MyParticle;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MyParticle *p=NULL;
      p = new MyParticle(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TVector3*)libp->para[4].ref,*(TVector3*)libp->para[5].ref
,(Double_t)G__double(libp->para[6]),(Double_t)G__double(libp->para[7])
,(Double_t)G__double(libp->para[8]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MyParticle *p=NULL;
      p = new MyParticle(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,*(TVector3*)libp->para[4].ref,*(TVector3*)libp->para[5].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((MyParticle*)(G__getstructoffset()))->AddTrack(*(TVector3*)libp->para[0].ref,(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((MyParticle*)(G__getstructoffset()))->AddTrack((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Int_t)G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyParticle*)(G__getstructoffset()))->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyParticle*)(G__getstructoffset()))->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyParticle*)(G__getstructoffset()))->GetDecayType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((MyParticle*)(G__getstructoffset()))->GetpLocation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVector3 *pobj,xobj=((MyParticle*)(G__getstructoffset()))->GetvLocation();
        pobj=new TVector3(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
        TVector3 *pobj,xobj=((MyParticle*)(G__getstructoffset()))->GetvMoment();
        pobj=new TVector3(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyParticle*)(G__getstructoffset()))->GetPassed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyParticle*)(G__getstructoffset()))->GetELoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyParticle*)(G__getstructoffset()))->GetDecayLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyParticle*)(G__getstructoffset()))->GetChildId((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyParticle*)(G__getstructoffset()))->GetTimeOfDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyParticle*)(G__getstructoffset()))->GetNChildren());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyParticle*)(G__getstructoffset()))->GetNTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const MyParticle*)(G__getstructoffset()))->GetObjectInfo((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const MyParticle*)(G__getstructoffset()))->GetTrack((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)((const MyParticle*)(G__getstructoffset()))->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetId((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetNChildren((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetStatus((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetDecayType((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetTimeOfDecay((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetLocation(*(TVector3*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetLocation((Double_t)G__double(libp->para[0]),(Double_t)G__double(libp->para[1])
,(Double_t)G__double(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetMoment(*(TVector3*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetMoment(*(TVector3*)libp->para[0].ref,(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetNextPoint((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetPassed((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->AddELoss((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetDecayLength((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->SetChild((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->GenerateTimeOfDecay();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)MyParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)MyParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      MyParticle::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const MyParticle*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyParticle*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)MyParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_358_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)MyParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootShowerDict_358_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   MyParticle *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new MyParticle(*(MyParticle*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyParticle G__TMyParticle;
static int G__RootShowerDict_358_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (MyParticle *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (MyParticle *)((G__getstructoffset())+sizeof(MyParticle)*i);
   else  delete (MyParticle *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RootShowerDict_358_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MyParticle *dest = (MyParticle*)(G__getstructoffset());
   *dest = (*(MyParticle*)libp->para[0].ref);
   const MyParticle& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyDetector */
static int G__RootShowerDict_441_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MyDetector *p=NULL;
   if(G__getaryconstruct()) {
     if(G__PVOID==G__getgvp()) {
       p=new MyDetector[G__getaryconstruct()];
     } else {
       p=new MyDetector[G__getaryconstruct()];
     }
   }
   else p=new MyDetector;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->Init();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetI((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetPreconst((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetEc((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetX0((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetdT((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetTheta0((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetDimX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetDimY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetDimZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetMaxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetMaxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetMaxZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetMinX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetMinY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetMinZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyDetector*)(G__getstructoffset()))->GetTotalELoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->GetDimensions((Double_t*)G__int(libp->para[0]),(Double_t*)G__int(libp->para[1])
,(Double_t*)G__int(libp->para[2]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((MyDetector*)(G__getstructoffset()))->GetGeoManager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->SetI((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->SetPreconst((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->SetEc((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->SetX0((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->SetdT((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->SetTheta0((Int_t)G__int(libp->para[0]),(Double_t)G__double(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->AddELoss((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->ClearELoss();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)MyDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)MyDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      MyDetector::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const MyDetector*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyDetector*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)MyDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_441_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)MyDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootShowerDict_441_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   MyDetector *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new MyDetector(*(MyDetector*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyDetector G__TMyDetector;
static int G__RootShowerDict_441_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (MyDetector *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (MyDetector *)((G__getstructoffset())+sizeof(MyDetector)*i);
   else  delete (MyDetector *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RootShowerDict_441_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MyDetector *dest = (MyDetector*)(G__getstructoffset());
   *dest = (*(MyDetector*)libp->para[0].ref);
   const MyDetector& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventHeader */
static int G__RootShowerDict_442_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   EventHeader *p=NULL;
   if(G__getaryconstruct()) {
     if(G__PVOID==G__getgvp()) {
       p=new EventHeader[G__getaryconstruct()];
     } else {
       p=::new((G__RootShowerDictdOcxx_tag*)G__getgvp()) EventHeader[G__getaryconstruct()];
     }
   }
   else p=::new((G__RootShowerDictdOcxx_tag*)G__getgvp()) EventHeader;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((EventHeader*)(G__getstructoffset()))->Set((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*((TDatime*)G__int(libp->para[2])),(Int_t)G__int(libp->para[3])
,(Double_t)G__double(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const EventHeader*)(G__getstructoffset()))->GetEvtNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const EventHeader*)(G__getstructoffset()))->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      {
const         TDatime *pobj,xobj=((const EventHeader*)(G__getstructoffset()))->GetDate();
        pobj=new TDatime(xobj);
        result7->obj.i=(long)((void*)pobj); result7->ref=result7->obj.i;
        G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const EventHeader*)(G__getstructoffset()))->GetPrimary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((const EventHeader*)(G__getstructoffset()))->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)EventHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)EventHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)EventHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      EventHeader::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const EventHeader*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((EventHeader*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((EventHeader*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((EventHeader*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)EventHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)EventHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)EventHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_442_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)EventHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootShowerDict_442_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   EventHeader *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new EventHeader(*(EventHeader*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventHeader G__TEventHeader;
static int G__RootShowerDict_442_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (EventHeader *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((EventHeader *)((G__getstructoffset())+sizeof(EventHeader)*i))->~G__TEventHeader();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((EventHeader *)(G__getstructoffset()))->~G__TEventHeader();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RootShowerDict_442_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   EventHeader *dest = (EventHeader*)(G__getstructoffset());
   *dest = (*(EventHeader*)libp->para[0].ref);
   const EventHeader& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyEvent */
static int G__RootShowerDict_443_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MyEvent *p=NULL;
   if(G__getaryconstruct()) {
     if(G__PVOID==G__getgvp()) {
       p=new MyEvent[G__getaryconstruct()];
     } else {
       p=new MyEvent[G__getaryconstruct()];
     }
   }
   else p=new MyEvent;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->Clear((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->Clear();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->Reset((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->Reset();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->Init((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Double_t)G__double(libp->para[2]),(Double_t)G__double(libp->para[3]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->SetB((Double_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->SetNseg((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->SetHeader((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*((TDatime*)G__int(libp->para[2])),(Int_t)G__int(libp->para[3])
,(Double_t)G__double(libp->para[4]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((MyEvent*)(G__getstructoffset()))->AddParticle((Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,*(TVector3*)libp->para[2].ref,*(TVector3*)libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->Id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const MyEvent*)(G__getstructoffset()))->GetNparticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const MyEvent*)(G__getstructoffset()))->GetNseg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->GetNAlives());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->GetTotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->GetLast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyEvent*)(G__getstructoffset()))->GetB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((MyEvent*)(G__getstructoffset()))->GetDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((MyEvent*)(G__getstructoffset()))->GetHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((MyEvent*)(G__getstructoffset()))->GetParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const MyEvent*)(G__getstructoffset()))->GetLastParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const MyEvent*)(G__getstructoffset()))->GetParticle((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->Action((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyEvent*)(G__getstructoffset()))->BremsProb((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->Bremsstrahlung((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->CheckDecayTime((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->CheckMatter((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->Decay((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->DefineDecay((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->DeleteParticle((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->DEDX((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->FindFreeId((Int_t*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->MagneticField((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->Move((Int_t)G__int(libp->para[0]),*(TVector3*)libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,100,(double)((MyEvent*)(G__getstructoffset()))->PairProb((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->PairCreation((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((MyEvent*)(G__getstructoffset()))->ParticleColor((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->ScatterAngle((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)MyEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)MyEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      MyEvent::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,85,(long)((const MyEvent*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((MyEvent*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)MyEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   G__letint(result7,67,(long)MyEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootShowerDict_443_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)MyEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootShowerDict_443_9_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   MyEvent *p;
   void *xtmp = (void*)G__int(libp->para[0]);
   p=new MyEvent(*(MyEvent*)xtmp);
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyEvent G__TMyEvent;
static int G__RootShowerDict_443_0_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (MyEvent *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (MyEvent *)((G__getstructoffset())+sizeof(MyEvent)*i);
   else  delete (MyEvent *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RootShowerDict_443_1_5(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   MyEvent *dest = (MyEvent*)(G__getstructoffset());
   *dest = (*(MyEvent*)libp->para[0].ref);
   const MyEvent& obj = *dest;
   result7->ref=(long)(&obj); result7->obj.i=(long)(&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MyParticle */

/* MyDetector */

/* EventHeader */

/* MyEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRootShowerDict {
 public:
  G__Sizep2memfuncRootShowerDict() {p=&G__Sizep2memfuncRootShowerDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRootShowerDict::*p)();
};

size_t G__get_sizep2memfuncRootShowerDict()
{
  G__Sizep2memfuncRootShowerDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRootShowerDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle))) {
     MyParticle *G__Lderived;
     G__Lderived=(MyParticle*)0x1000;
     {
       TParticle *G__Lpbase=(TParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),G__get_linked_tagnum(&G__RootShowerDictLN_TParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),G__get_linked_tagnum(&G__RootShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),G__get_linked_tagnum(&G__RootShowerDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),G__get_linked_tagnum(&G__RootShowerDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector))) {
     MyDetector *G__Lderived;
     G__Lderived=(MyDetector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector),G__get_linked_tagnum(&G__RootShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent))) {
     MyEvent *G__Lderived;
     G__Lderived=(MyEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent),G__get_linked_tagnum(&G__RootShowerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRootShowerDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,
-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RootShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,"// @(#)root/base:$Name:  $:$Id: TROOT.h,v 1.51 2005/11/21 11:17:18 rdm Exp $",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MyParticle */
static void G__setup_memvarMyParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle));
   { MyParticle *p; p=(MyParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fId=",0,"Index of particle in array");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStatus=",0,"Particle's status (CREATED,ALIVE,DEAD)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDecayType=",0,"Particle's decay type (bremstrahlung,pair production,decay)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNChildren=",0,"Number of children");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TVector3),-1,-1,4,"fLocation=",0,"Particle's current location");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPassed=",0,"Distance actually covered");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEloss=",0,"Total Energy loss into the detector");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDecayLength=",0,"Calculated interaction length");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeOfDecay=",0,"Generated decay time");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fChild[6]=",0,"Array of children indexes");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNtrack=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TObjArray),-1,-1,4,"fTracks=",0,"->array with all tracks");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyDetector */
static void G__setup_memvarMyDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector));
   { MyDetector *p; p=(MyDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMinZ=",0,"Detector min. boundaries");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxZ=",0,"Detector max. boundaries");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDimX=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDimY=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDimZ=",0,"Detector dimensions");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fI[6]=",0,"Ionisation constant for current material (in MeV/cm)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPreconst[6]=",0,"First factor in the Bethe-Bloch equation for current material (in MeV/cm)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEc[6]=",0,"Critical Energy for current material (in MeV)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX0[6]=",0,"Radiation Length for current material (in cm)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fdT[6]=",0,"Time step dT for current material (in ms - about 0.015 times X_0/c)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTheta0[6]=",0,"Scatter angle for current material");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTotalELoss=",0,"Total Energy loss by particles into the detector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventHeader */
static void G__setup_memvarEventHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader));
   { EventHeader *p; p=(EventHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEvtNum=",0,"Event Identification");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRun=",0,"Run Identification");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TDatime),-1,-1,4,"fDate=",0,"Date of the simulation");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPrimary=",0,"Type of the primary particle (PDG code)");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,"Primary particle's energy");
   G__memvar_setup((void*)NULL,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyEvent */
static void G__setup_memvarMyEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent));
   { MyEvent *p; p=(MyEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fId=",0,"Event identification (obsolete)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTotalParticles=",0,"Total number of particles");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLast=",0,"Index of last particle");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fAliveParticles=",0,"Number of still alive particles");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNparticles=",0,"Number of particles");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNseg=",0,"Number of track segments");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMatter=",0,"Material index");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader),-1,-1,4,"fEvtHdr=",0,"Event header");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fB=",0,"Magnetic field");
   G__memvar_setup((void*)NULL,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEThreshold[16]=",0,"Energy threshold for coloring tracks");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TClonesArray),-1,-1,4,"fParticles=",0,"->array with all particles");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TRef),-1,-1,4,"fLastParticle=",0,"Reference pointer to last particle");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector),-1,-1,4,"fDetector=",0,"Detector");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TClonesArray),-1,-2,4,"fgParticles=",0,"Pointer on particles array");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRootShowerDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMyParticle(void) {
   /* MyParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle));
   G__memfunc_setup("MyParticle",1018,G__RootShowerDict_358_1_0,105,G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MyParticle",1018,G__RootShowerDict_358_2_0,105,G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),-1,0,9,1,1,0,
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TVector3' - 11 - - u 'TVector3' - 11 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MyParticle",1018,G__RootShowerDict_358_3_0,105,G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),-1,0,6,1,1,0,
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TVector3' - 11 - - u 'TVector3' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddTrack",766,G__RootShowerDict_358_4_0,85,G__get_linked_tagnum(&G__RootShowerDictLN_TPolyLine3D),-1,0,2,1,1,0,
"u 'TVector3' - 11 - - i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddTrack",766,G__RootShowerDict_358_5_0,85,G__get_linked_tagnum(&G__RootShowerDictLN_TPolyLine3D),-1,0,4,1,1,0,
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetId",461,G__RootShowerDict_358_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetStatus",932,G__RootShowerDict_358_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDecayType",1192,G__RootShowerDict_358_8_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetpLocation",1225,G__RootShowerDict_358_9_0,85,G__get_linked_tagnum(&G__RootShowerDictLN_TVector3),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetvLocation",1231,G__RootShowerDict_358_0_1,117,G__get_linked_tagnum(&G__RootShowerDictLN_TVector3),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetvMoment",1030,G__RootShowerDict_358_1_1,117,G__get_linked_tagnum(&G__RootShowerDictLN_TVector3),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPassed",896,G__RootShowerDict_358_2_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetELoss",774,G__RootShowerDict_358_3_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDecayLength",1384,G__RootShowerDict_358_4_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetChildId",945,G__RootShowerDict_358_5_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTimeOfDecay",1354,G__RootShowerDict_358_6_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNChildren",1175,G__RootShowerDict_358_7_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNTracks",982,G__RootShowerDict_358_8_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetObjectInfo",1283,G__RootShowerDict_358_9_1,67,-1,G__defined_typename("Char_t"),0,2,1,1,8,
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetTrack",789,G__RootShowerDict_358_0_2,85,G__get_linked_tagnum(&G__RootShowerDictLN_TPolyLine3D),-1,0,1,1,1,8,"i - 'Int_t' 0 - at",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetName",673,G__RootShowerDict_358_1_2,67,-1,G__defined_typename("Char_t"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("SetId",473,G__RootShowerDict_358_2_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNChildren",1187,G__RootShowerDict_358_3_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nb",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetStatus",944,G__RootShowerDict_358_4_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - stat",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetDecayType",1204,G__RootShowerDict_358_5_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - decay",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTimeOfDecay",1366,G__RootShowerDict_358_6_2,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - time",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetLocation",1125,G__RootShowerDict_358_7_2,121,-1,-1,0,1,1,1,0,"u 'TVector3' - 11 - loc",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetLocation",1125,G__RootShowerDict_358_8_2,121,-1,-1,0,3,1,1,0,
"d - 'Double_t' 0 - lx d - 'Double_t' 0 - ly "
"d - 'Double_t' 0 - lz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMoment",924,G__RootShowerDict_358_9_2,121,-1,-1,0,1,1,1,0,"u 'TVector3' - 11 - mom",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetMoment",924,G__RootShowerDict_358_0_3,121,-1,-1,0,2,1,1,0,
"u 'TVector3' - 11 - mom d - 'Double_t' 0 - energy",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNextPoint",1237,G__RootShowerDict_358_1_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - color",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPassed",908,G__RootShowerDict_358_2_3,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - pass",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddELoss",751,G__RootShowerDict_358_3_3,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - eloss",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetDecayLength",1396,G__RootShowerDict_358_4_3,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - len",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetChild",784,G__RootShowerDict_358_5_3,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - id i - 'Int_t' 0 - child_id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GenerateTimeOfDecay",1877,G__RootShowerDict_358_6_3,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__RootShowerDict_358_7_3,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&MyParticle::Class),0);
   G__memfunc_setup("Class_Name",982,G__RootShowerDict_358_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyParticle::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__RootShowerDict_358_9_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&MyParticle::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__RootShowerDict_358_0_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&MyParticle::Dictionary),0);
   G__memfunc_setup("IsA",253,G__RootShowerDict_358_1_4,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__RootShowerDict_358_2_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__RootShowerDict_358_3_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootShowerDict_358_4_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__RootShowerDict_358_5_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyParticle::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__RootShowerDict_358_6_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&MyParticle::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__RootShowerDict_358_7_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyParticle::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__RootShowerDict_358_8_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&MyParticle::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("MyParticle",1018,G__RootShowerDict_358_9_4,(int)('i'),G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),-1,0,1,1,1,0,"u 'MyParticle' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~MyParticle",1144,G__RootShowerDict_358_0_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__RootShowerDict_358_1_5,(int)('u'),G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),-1,1,1,1,1,0,"u 'MyParticle' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyDetector(void) {
   /* MyDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector));
   G__memfunc_setup("MyDetector",1024,G__RootShowerDict_441_1_0,105,G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,G__RootShowerDict_441_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetI",361,G__RootShowerDict_441_3_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPreconst",1134,G__RootShowerDict_441_4_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEc",456,G__RootShowerDict_441_5_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetX0",424,G__RootShowerDict_441_6_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetdT",472,G__RootShowerDict_441_7_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTheta0",838,G__RootShowerDict_441_8_0,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - idx",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDimX",658,G__RootShowerDict_441_9_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDimY",659,G__RootShowerDict_441_0_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDimZ",660,G__RootShowerDict_441_1_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxX",670,G__RootShowerDict_441_2_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxY",671,G__RootShowerDict_441_3_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMaxZ",672,G__RootShowerDict_441_4_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMinX",668,G__RootShowerDict_441_5_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMinY",669,G__RootShowerDict_441_6_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetMinZ",670,G__RootShowerDict_441_7_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTotalELoss",1290,G__RootShowerDict_441_8_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDimensions",1337,G__RootShowerDict_441_9_1,121,-1,-1,0,3,1,1,0,
"D - 'Double_t' 0 - dimx D - 'Double_t' 0 - dimy "
"D - 'Double_t' 0 - dimz",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetGeoManager",1270,G__RootShowerDict_441_0_2,85,G__get_linked_tagnum(&G__RootShowerDictLN_TGeoManager),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetI",373,G__RootShowerDict_441_1_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - idx d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetPreconst",1146,G__RootShowerDict_441_2_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - idx d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetEc",468,G__RootShowerDict_441_3_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - idx d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetX0",436,G__RootShowerDict_441_4_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - idx d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetdT",484,G__RootShowerDict_441_5_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - idx d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetTheta0",850,G__RootShowerDict_441_6_2,121,-1,-1,0,2,1,1,0,
"i - 'Int_t' 0 - idx d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddELoss",751,G__RootShowerDict_441_7_2,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ClearELoss",973,G__RootShowerDict_441_8_2,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__RootShowerDict_441_9_2,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&MyDetector::Class),0);
   G__memfunc_setup("Class_Name",982,G__RootShowerDict_441_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyDetector::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__RootShowerDict_441_1_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&MyDetector::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__RootShowerDict_441_2_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&MyDetector::Dictionary),0);
   G__memfunc_setup("IsA",253,G__RootShowerDict_441_3_3,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__RootShowerDict_441_4_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__RootShowerDict_441_5_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootShowerDict_441_6_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__RootShowerDict_441_7_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyDetector::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__RootShowerDict_441_8_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&MyDetector::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__RootShowerDict_441_9_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyDetector::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__RootShowerDict_441_0_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&MyDetector::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("MyDetector",1024,G__RootShowerDict_441_1_4,(int)('i'),G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector),-1,0,1,1,1,0,"u 'MyDetector' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~MyDetector",1150,G__RootShowerDict_441_2_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__RootShowerDict_441_3_4,(int)('u'),G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector),-1,1,1,1,1,0,"u 'MyDetector' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventHeader(void) {
   /* EventHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader));
   G__memfunc_setup("EventHeader",1099,G__RootShowerDict_442_1_0,105,G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Set",300,G__RootShowerDict_442_2_0,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 - i i - 'Int_t' 0 - r "
"u 'TDatime' - 0 - d i - 'Int_t' 0 - p "
"d - 'Double_t' 0 - e",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEvtNum",895,G__RootShowerDict_442_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetRun",597,G__RootShowerDict_442_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDate",670,G__RootShowerDict_442_5_0,117,G__get_linked_tagnum(&G__RootShowerDictLN_TDatime),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetPrimary",1028,G__RootShowerDict_442_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetEnergy",906,G__RootShowerDict_442_7_0,100,-1,G__defined_typename("Double_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__RootShowerDict_442_8_0,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&EventHeader::Class),0);
   G__memfunc_setup("Class_Name",982,G__RootShowerDict_442_9_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&EventHeader::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__RootShowerDict_442_0_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&EventHeader::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__RootShowerDict_442_1_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&EventHeader::Dictionary),0);
   G__memfunc_setup("IsA",253,G__RootShowerDict_442_2_1,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__RootShowerDict_442_3_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__RootShowerDict_442_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootShowerDict_442_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__RootShowerDict_442_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&EventHeader::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__RootShowerDict_442_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&EventHeader::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__RootShowerDict_442_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&EventHeader::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__RootShowerDict_442_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&EventHeader::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("EventHeader",1099,G__RootShowerDict_442_0_2,(int)('i'),G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader),-1,0,1,1,1,0,"u 'EventHeader' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~EventHeader",1225,G__RootShowerDict_442_1_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__RootShowerDict_442_2_2,(int)('u'),G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader),-1,1,1,1,1,0,"u 'EventHeader' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyEvent(void) {
   /* MyEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent));
   G__memfunc_setup("MyEvent",712,G__RootShowerDict_443_1_0,105,G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clear",487,G__RootShowerDict_443_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Reset",515,G__RootShowerDict_443_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 10 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Init",404,G__RootShowerDict_443_4_0,121,-1,-1,0,4,1,1,0,
"i - 'Int_t' 0 - id i - 'Int_t' 0 - first_particle "
"d - 'Double_t' 0 - E_0 d - 'Double_t' 0 - B_0",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetB",366,G__RootShowerDict_443_5_0,121,-1,-1,0,1,1,1,0,"d - 'Double_t' 0 - newB",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetNseg",697,G__RootShowerDict_443_6_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - n",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("SetHeader",885,G__RootShowerDict_443_7_0,121,-1,-1,0,5,1,1,0,
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TDatime' - 0 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AddParticle",1085,G__RootShowerDict_443_8_0,85,G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),-1,0,4,1,1,0,
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TVector3' - 11 - - u 'TVector3' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Id",173,G__RootShowerDict_443_9_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNparticles",1333,G__RootShowerDict_443_0_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNseg",685,G__RootShowerDict_443_1_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetNAlives",978,G__RootShowerDict_443_2_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetTotal",804,G__RootShowerDict_443_3_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLast",692,G__RootShowerDict_443_4_1,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetB",354,G__RootShowerDict_443_5_1,100,-1,G__defined_typename("Double_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetDetector",1114,G__RootShowerDict_443_6_1,85,G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetHeader",873,G__RootShowerDict_443_7_1,85,G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetParticles",1223,G__RootShowerDict_443_8_1,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClonesArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetLastParticle",1512,G__RootShowerDict_443_9_1,85,G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("GetParticle",1108,G__RootShowerDict_443_0_2,85,G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),-1,0,1,1,1,8,"i - 'Int_t' 0 - at",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Action",606,G__RootShowerDict_443_1_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("BremsProb",908,G__RootShowerDict_443_2_2,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Bremsstrahlung",1489,G__RootShowerDict_443_3_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckDecayTime",1363,G__RootShowerDict_443_4_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CheckMatter",1099,G__RootShowerDict_443_5_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Decay",486,G__RootShowerDict_443_6_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DefineDecay",1073,G__RootShowerDict_443_7_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeleteParticle",1415,G__RootShowerDict_443_8_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DEDX",293,G__RootShowerDict_443_9_2,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("FindFreeId",944,G__RootShowerDict_443_0_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"I - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("MagneticField",1292,G__RootShowerDict_443_1_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Move",407,G__RootShowerDict_443_2_3,105,-1,G__defined_typename("Int_t"),0,2,1,1,0,
"i - 'Int_t' 0 - - u 'TVector3' - 1 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PairProb",799,G__RootShowerDict_443_3_3,100,-1,G__defined_typename("Double_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("PairCreation",1217,G__RootShowerDict_443_4_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ParticleColor",1331,G__RootShowerDict_443_5_3,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ScatterAngle",1213,G__RootShowerDict_443_6_3,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - -",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__RootShowerDict_443_7_3,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)(TClass* (*)())(&MyEvent::Class),0);
   G__memfunc_setup("Class_Name",982,G__RootShowerDict_443_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyEvent::Class_Name),0);
   G__memfunc_setup("Class_Version",1339,G__RootShowerDict_443_9_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)(Version_t (*)())(&MyEvent::Class_Version),0);
   G__memfunc_setup("Dictionary",1046,G__RootShowerDict_443_0_4,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(void (*)())(&MyEvent::Dictionary),0);
   G__memfunc_setup("IsA",253,G__RootShowerDict_443_1_4,85,G__get_linked_tagnum(&G__RootShowerDictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__RootShowerDict_443_2_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__RootShowerDict_443_3_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootShowerDict_443_4_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__RootShowerDict_443_5_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyEvent::DeclFileName),0);
   G__memfunc_setup("ImplFileLine",1178,G__RootShowerDict_443_6_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&MyEvent::ImplFileLine),0);
   G__memfunc_setup("ImplFileName",1171,G__RootShowerDict_443_7_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)(const char* (*)())(&MyEvent::ImplFileName),0);
   G__memfunc_setup("DeclFileLine",1152,G__RootShowerDict_443_8_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)(int (*)())(&MyEvent::DeclFileLine),0);
   // automatic copy constructor
   G__memfunc_setup("MyEvent",712,G__RootShowerDict_443_9_4,(int)('i'),G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent),-1,0,1,1,1,0,"u 'MyEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~MyEvent",838,G__RootShowerDict_443_0_5,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   // automatic assignment operator
   G__memfunc_setup("operator=",937,G__RootShowerDict_443_1_5,(int)('u'),G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent),-1,1,1,1,1,0,"u 'MyEvent' - 11 - -",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRootShowerDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRootShowerDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRootShowerDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RootShowerDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TPolyLine3D = { "TPolyLine3D" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_MyParticle = { "MyParticle" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_TGeoManager = { "TGeoManager" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_MyDetector = { "MyDetector" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_EventHeader = { "EventHeader" , 99 , -1 };
G__linked_taginfo G__RootShowerDictLN_MyEvent = { "MyEvent" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRootShowerDict() {
  G__RootShowerDictLN_TClass.tagnum = -1 ;
  G__RootShowerDictLN_TBuffer.tagnum = -1 ;
  G__RootShowerDictLN_TMemberInspector.tagnum = -1 ;
  G__RootShowerDictLN_TObject.tagnum = -1 ;
  G__RootShowerDictLN_TObjArray.tagnum = -1 ;
  G__RootShowerDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__RootShowerDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootShowerDictLN_TDatime.tagnum = -1 ;
  G__RootShowerDictLN_TAttLine.tagnum = -1 ;
  G__RootShowerDictLN_TClonesArray.tagnum = -1 ;
  G__RootShowerDictLN_TVector3.tagnum = -1 ;
  G__RootShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__RootShowerDictLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__RootShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RootShowerDictLN_TRef.tagnum = -1 ;
  G__RootShowerDictLN_TAtt3D.tagnum = -1 ;
  G__RootShowerDictLN_TPolyLine3D.tagnum = -1 ;
  G__RootShowerDictLN_TParticle.tagnum = -1 ;
  G__RootShowerDictLN_MyParticle.tagnum = -1 ;
  G__RootShowerDictLN_TGeoManager.tagnum = -1 ;
  G__RootShowerDictLN_MyDetector.tagnum = -1 ;
  G__RootShowerDictLN_EventHeader.tagnum = -1 ;
  G__RootShowerDictLN_MyEvent.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRootShowerDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum(&G__RootShowerDictLN_TClass);
   G__get_linked_tagnum(&G__RootShowerDictLN_TBuffer);
   G__get_linked_tagnum(&G__RootShowerDictLN_TMemberInspector);
   G__get_linked_tagnum(&G__RootShowerDictLN_TObject);
   G__get_linked_tagnum(&G__RootShowerDictLN_TObjArray);
   G__get_linked_tagnum(&G__RootShowerDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__RootShowerDictLN_TDatime);
   G__get_linked_tagnum(&G__RootShowerDictLN_TAttLine);
   G__get_linked_tagnum(&G__RootShowerDictLN_TClonesArray);
   G__get_linked_tagnum(&G__RootShowerDictLN_TVector3);
   G__get_linked_tagnum(&G__RootShowerDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__RootShowerDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum(&G__RootShowerDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum(&G__RootShowerDictLN_TRef);
   G__get_linked_tagnum(&G__RootShowerDictLN_TAtt3D);
   G__get_linked_tagnum(&G__RootShowerDictLN_TPolyLine3D);
   G__get_linked_tagnum(&G__RootShowerDictLN_TParticle);
   G__tagtable_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyParticle),sizeof(MyParticle),-1,324864,"Event structure",G__setup_memvarMyParticle,G__setup_memfuncMyParticle);
   G__get_linked_tagnum(&G__RootShowerDictLN_TGeoManager);
   G__tagtable_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyDetector),sizeof(MyDetector),-1,292096,"Detector structure",G__setup_memvarMyDetector,G__setup_memfuncMyDetector);
   G__tagtable_setup(G__get_linked_tagnum(&G__RootShowerDictLN_EventHeader),sizeof(EventHeader),-1,263424,"Event Header",G__setup_memvarEventHeader,G__setup_memfuncEventHeader);
   G__tagtable_setup(G__get_linked_tagnum(&G__RootShowerDictLN_MyEvent),sizeof(MyEvent),-1,292096,"Event structure",G__setup_memvarMyEvent,G__setup_memfuncMyEvent);
}
extern "C" void G__cpp_setupRootShowerDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRootShowerDict()");
  G__set_cpp_environmentRootShowerDict();
  G__cpp_setup_tagtableRootShowerDict();

  G__cpp_setup_inheritanceRootShowerDict();

  G__cpp_setup_typetableRootShowerDict();

  G__cpp_setup_memvarRootShowerDict();

  G__cpp_setup_memfuncRootShowerDict();
  G__cpp_setup_globalRootShowerDict();
  G__cpp_setup_funcRootShowerDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRootShowerDict();
  return;
}
class G__cpp_setup_initRootShowerDict {
  public:
    G__cpp_setup_initRootShowerDict() { G__add_setup_func("RootShowerDict",(G__incsetup)(&G__cpp_setupRootShowerDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRootShowerDict() { G__remove_setup_func("RootShowerDict"); }
};
G__cpp_setup_initRootShowerDict G__cpp_setup_initializerRootShowerDict;

